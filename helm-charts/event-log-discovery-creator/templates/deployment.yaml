apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ include "event-log-discovery-creator.fullname" . }}
    labels:
        app.kubernetes.io/name: {{ include "event-log-discovery-creator.name" . }}
        helm.sh/chart: {{ include "event-log-discovery-creator.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
    replicas: {{ .Values.eventLogDiscoveryCreator.replicaCount }}
{{- if .Values.eventLogDiscoveryCreator.strategy }}
    strategy:
{{ with .Values.eventLogDiscoveryCreator.strategy }}
{{ toYaml . | indent 8 }}
{{ end }}
{{ end }}
    selector:
        matchLabels:
            app.kubernetes.io/name: {{ include "event-log-discovery-creator.name" . }}
            app.kubernetes.io/instance: {{ .Release.Name }}
    template:
        metadata:
            labels:
                app.kubernetes.io/name: {{ include "event-log-discovery-creator.name" . }}
                app.kubernetes.io/instance: {{ .Release.Name }}
        spec:
            containers:
                - name: {{ .Chart.Name }}
                  image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  ports:
                      - containerPort: 8080
                      - containerPort: 9010
                      - containerPort: 9020
                      - containerPort: 4321
                  readinessProbe:
                      tcpSocket:
                          port: 9010
                      initialDelaySeconds: 10
                      periodSeconds: 10
                  livenessProbe:
                      tcpSocket:
                          port: 9010
                      initialDelaySeconds: 20
                      periodSeconds: 60
                  env:
                      - name: UPA_KFC_NODES
                        value: "{{ .Values.eventLogDiscoveryCreator.kafka.consumer.bootstrapServers}}"
                      - name: UPA_KFC_TOPIC
                        value: "{{ .Values.eventLogDiscoveryCreator.kafka.consumer.topic}}"
                      - name: UPA_KFC_GROUP
                        value: "{{ .Values.eventLogDiscoveryCreator.kafka.consumer.groupId}}"
                      - name: UPA_KFP_NODES
                        value: "{{ .Values.eventLogDiscoveryCreator.kafka.producer.bootstrapServers}}"
                      - name: UPA_KFP_TOPIC
                        value: "{{ .Values.eventLogDiscoveryCreator.kafka.producer.topic}}"
                      - name: UPA_KFP_ERROR_TOPIC
                        value: "{{ .Values.eventLogDiscoveryCreator.kafka.producer.errorTopic}}"
                      - name: UPA_PROM_HTTP_PORT
                        value: "{{ .Values.eventLogDiscoveryCreator.prometheus.port}}"
                      - name: UPA_KFC_MAX_POLL_RECORDS
                        value: "{{ .Values.eventLogDiscoveryCreator.kafka.consumer.maxpoll}}"
                      - name: UPA_KFP_LINGER_MS
                        value: "{{ .Values.eventLogDiscoveryCreator.kafka.producer.linger }}"
                      - name: UPA_EXEC_THREAD_POOL_SIZE
                        value: "{{ .Values.eventLogDiscoveryCreator.exec.threadpoolsize }}"
                      - name: UPA_KFC_FETCH_MAX_BYTES_CONFIG
                        value: "{{ .Values.eventLogDiscoveryCreator.kafka.consumer.fetchMaxBytes }}"
                      - name: UPA_KFC_MAX_PARTITION_FETCH_BYTES_CONFIG
                        value: "{{ .Values.eventLogDiscoveryCreator.kafka.consumer.partitionFetchMaxBytes }}"

                  resources:
                    {{- toYaml .Values.resources | nindent 20 }}
                {{- with .Values.nodeSelector }}
            nodeSelector:
                {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- with .Values.affinity }}
            affinity:
            {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- with .Values.tolerations }}
            tolerations:
            {{- toYaml . | nindent 8 }}
        {{- end }}
