apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "event-log-chainer-master.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "event-log-chainer-master.name" . }}
    helm.sh/chart: {{ include "event-log-chainer-master.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.eventLogChainerMaster.replicaCount }}
{{- if .Values.eventLogChainerMaster.strategy }}
  strategy:
{{ with .Values.eventLogChainerMaster.strategy }}
{{ toYaml . | indent 4 }}
{{ end }}
{{ end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "event-log-chainer-master.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "event-log-chainer-master.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8080
            - containerPort: 9010
            - containerPort: 9020
            - containerPort: 4321
          readinessProbe:
            tcpSocket:
              port: 9010
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 9010
            initialDelaySeconds: 20
            periodSeconds: 60
          env:
            - name: CHAINER_KFC_NODES
              value: "{{ .Values.eventLogChainerMaster.kafka.bootstrapServers}}"
            - name: CHAINER_KFC_TOPIC
              value: "{{ .Values.eventLogChainerMaster.kafka.consumer.topic}}"
            - name: CHAINER_KFC_GROUP
              value: "{{ .Values.eventLogChainerMaster.kafka.consumer.group}}"
            - name: CHAINER_KFP_NODES
              value: "{{ .Values.eventLogChainerMaster.kafka.bootstrapServers}}"
            - name: CHAINER_KFP_TOPIC
              value: "{{ .Values.eventLogChainerMaster.kafka.producer.topic}}"
            - name: CHAINER_KFP_ERROR_TOPIC
              value: "{{ .Values.eventLogChainerMaster.kafka.producer.errorTopic}}"
            - name: CHAINER_PROM_HTTP_PORT
              value: "{{ .Values.eventLogChainerMaster.prometheus.port}}"
            - name: CHAINER_MIN_TREE_RECORDS
              value: "{{ .Values.eventLogChainerMaster.minTreeRecords}}"
            - name: CHAINER_MIN_TREE_EVERY
              value: "{{ .Values.eventLogChainerMaster.treeEvery }}"
            - name: CHAINER_MIN_TREE_UPGRADE
              value: "{{ .Values.eventLogChainerMaster.treeUpgrade }}"
            - name: CHAINER_MODE
              value: "{{ .Values.eventLogChainerMaster.mode }}"
            - name: CHAINER_SPLIT
              value: "{{ .Values.eventLogChainerMaster.split }}"
            - name: CHAINER_SPLIT_SIZE
              value: "{{ .Values.eventLogChainerMaster.splitSize }}"
            - name: CHAINER_KFC_MAX_POLL_RECORDS
              value: "{{ .Values.eventLogChainerMaster.kafka.consumer.maxpoll }}"
            - name: CHAINER_KFP_LINGER_MS
              value: "{{ .Values.eventLogChainerMaster.kafka.producer.linger }}"
            - name: CHAINER_EXEC_THREAD_POOL_SIZE
              value: "{{ .Values.eventLogChainerMaster.exec.threadpoolsize }}"
            - name: CHAINER_PAUSE
              value: "{{ .Values.eventLogChainerMaster.chainerpause }}"
            - name: CHAINER_KFC_FETCH_MAX_BYTES_CONFIG
              value: "{{ .Values.eventLogChainerMaster.kafka.consumer.fetchMaxBytes }}"
            - name: CHAINER_KFC_MAX_PARTITION_FETCH_BYTES_CONFIG
              value: "{{ .Values.eventLogChainerMaster.kafka.consumer.partitionFetchMaxBytes }}"
            - name: CHAINER_DAYSBACK
              value: "{{ .Values.eventLogChainerMaster.daysBack }}"
            - name: CHAINER_LOG_QUERY_ENDPOINT
              value: "{{ .Values.eventLogChainerMaster.logQueryEndPoint }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
    affinity:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
    tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}
