package com.ubirch.models

object Values {

  val BIG_BANG_MASTER_TREE_CATEGORY = "BIG_BANG_MASTER_TREE"
  val MASTER_TREE_CATEGORY = "MASTER_TREE"
  val SLAVE_TREE_CATEGORY = "SLAVE_TREE"
  val FOUNDATION_TREE_CATEGORY = "FOUNDATION_TREE"
  val UPP_CATEGORY = "UPP"
  val UPP_DISABLE_CATEGORY = "UPP_DISABLE"
  val UPP_ENABLE_CATEGORY = "UPP_ENABLE"
  val UPP_DELETE_CATEGORY = "UPP_DELETE"
  val PUB_KEY_CATEGORY = "PUB_KEY"
  val CHAIN_CATEGORY = "CHAIN"
  val DEVICE_CATEGORY = "DEVICE"
  val PUBLIC_CHAIN_CATEGORY = "PUBLIC_CHAIN"
  val UNKNOWN_CATEGORY = "UNKNOW_CATEGORY"
  val MASTER_TREE_ID = "master-tree-id"
  val BIG_BANG_MASTER_TREE_ID = "big-bang-master-tree-id"
  val SLAVE_TREE_ID = "slave-tree-id"
  val SLAVE_TREE_LINK_ID = "slave-tree-link-id"
  val SLAVE_TREE_UPGRADE_ID = "slave-tree-upgrade-id"
  val MASTER_TREE_UPGRADE_ID = "master-tree-upgrade-id"
  val MASTER_TREE_LINK_ID = "master-tree-link-id"
  val PAYLOAD = "payload"
  val SIGNATURE = "signature"
  val PRODUCER_ID = "producer-id"
  val DEVICE_ID = "device-id"
  val LAST_HASH = "last-hash"
  val UPP_CHAIN = "upp-chain"
  val PUBLIC_CHAIN_PROPERTY = "public_chain"
  val HASH = "hash"
  val PREV_HASH = "prev_hash"
  val NEXT_HASH = "next_hash"
  val TYPE = "type"
  val ETHEREUM_TESTNET_RINKEBY_TESTNET_NETWORK = "ETHEREUM_TESTNET_RINKEBY_TESTNET_NETWORK"
  val UBIRCH = "ubirch"
  val CATEGORY_LABEL = "CATEGORY"
  val NAME_LABEL = "NAME"
  val ENCODER_SYSTEM = "ENCODER"
  val DISPATCHER_SYSTEM = "DISPATCHER"
  val EVENT_LOG_SYSTEM = "EVENT_LOG"
  val SUCCESS = "success"
  val FAILURE = "failure"
  val SHORTEST_PATH = "shortest_path"
  val BLOCKCHAINS = "blockchains"
  val TIMESTAMP = "timestamp"
  val QUERY_DEPTH_SIMPLE = "query-depth-simple"
  val QUERY_DEPTH_SHORTEST_PATH = "query-depth-shortest-path"
  val QUERY_DEPTH_SHORTEST_UPPER_LOWER = "query-depth-upper-lower"
  val UPPER_PATH = "upper_path"
  val UPPER_BLOCKCHAINS = "upper_blockchains"
  val LOWER_PATH = "lower_path"
  val LOWER_BLOCKCHAINS = "lower_blockchains"
  val RESPONSE_ANCHORS_WITH_PATH = "anchors_with_path"
  val RESPONSE_ANCHORS_NO_PATH = "anchors_no_path"

}
