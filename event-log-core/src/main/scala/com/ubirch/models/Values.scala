package com.ubirch.models

object Values {

  final val BIG_BANG_MASTER_TREE_CATEGORY = "BIG_BANG_MASTER_TREE"
  final val MASTER_TREE_CATEGORY = "MASTER_TREE"
  final val SLAVE_TREE_CATEGORY = "SLAVE_TREE"
  final val FOUNDATION_TREE_CATEGORY = "FOUNDATION_TREE"
  final val UPP_CATEGORY = "UPP"
  final val UPP_DISABLE_CATEGORY = "UPP_DISABLE"
  final val UPP_ENABLE_CATEGORY = "UPP_ENABLE"
  final val UPP_DELETE_CATEGORY = "UPP_DELETE"
  final val PUB_KEY_CATEGORY = "PUB_KEY"
  final val CHAIN_CATEGORY = "CHAIN"
  final val DEVICE_CATEGORY = "DEVICE"
  final val PUBLIC_CHAIN_CATEGORY = "PUBLIC_CHAIN"
  final val ACCT_CATEGORY = "ACCT"
  final val UNKNOWN_CATEGORY = "UNKNOW_CATEGORY"
  final val MASTER_TREE_ID = "master-tree-id"
  final val BIG_BANG_MASTER_TREE_ID = "big-bang-master-tree-id"
  final val SLAVE_TREE_ID = "slave-tree-id"
  final val SLAVE_TREE_LINK_ID = "slave-tree-link-id"
  final val SLAVE_TREE_UPGRADE_ID = "slave-tree-upgrade-id"
  final val MASTER_TREE_UPGRADE_ID = "master-tree-upgrade-id"
  final val MASTER_TREE_LINK_ID = "master-tree-link-id"
  final val PAYLOAD = "payload"
  final val SIGNATURE = "signature"
  final val PRODUCER_ID = "producer-id"
  final val DEVICE_ID = "device-id"
  final val LAST_HASH = "last-hash"
  final val UPP_CHAIN = "upp-chain"
  final val PUBLIC_CHAIN_PROPERTY = "public_chain"
  final val HASH = "hash"
  final val PREV_HASH = "prev_hash"
  final val NEXT_HASH = "next_hash"
  final val TYPE = "type"
  final val ETHEREUM_TESTNET_RINKEBY_TESTNET_NETWORK = "ETHEREUM_TESTNET_RINKEBY_TESTNET_NETWORK"
  final val UBIRCH = "ubirch"
  final val CATEGORY_LABEL = "CATEGORY"
  final val NAME_LABEL = "NAME"
  final val ENCODER_SYSTEM = "ENCODER"
  final val DISPATCHER_SYSTEM = "DISPATCHER"
  final val EVENT_LOG_SYSTEM = "EVENT_LOG"
  final val SUCCESS = "success"
  final val FAILURE = "failure"
  final val SHORTEST_PATH = "shortest_path"
  final val BLOCKCHAINS = "blockchains"
  final val TIMESTAMP = "timestamp"
  final val QUERY_DEPTH_SIMPLE = "query-depth-simple"
  final val QUERY_DEPTH_SHORTEST_PATH = "query-depth-shortest-path"
  final val QUERY_DEPTH_SHORTEST_UPPER_LOWER = "query-depth-upper-lower"
  final val UPPER_PATH = "upper_path"
  final val UPPER_BLOCKCHAINS = "upper_blockchains"
  final val LOWER_PATH = "lower_path"
  final val LOWER_BLOCKCHAINS = "lower_blockchains"
  final val RESPONSE_ANCHORS_WITH_PATH = "anchors_with_path"
  final val RESPONSE_ANCHORS_NO_PATH = "anchors_no_path"

}
