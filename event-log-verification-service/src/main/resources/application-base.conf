verification {
  http {
    port = 9090
  }

  swaggerBaseUrl = "http://localhost:9090/api/"

  eventResponse-by-hash-cache {
    timeToLive = 60 s
    maxIdleTime = 0 s
  }

  eventResponse-by-signature-cache {
    timeToLive = 60 s
    maxIdleTime = 0 s
  }

  health-check {
    port = 8888
    enabled = false
  }
}

ubirchKeyService.client.rest.host = ""

redisson {
  main {
    singleServerConfig {
      address = "redis://"${REDIS_MASTER_URL}
      clientName = "event-log-verification-service"
      password = ${REDIS_PASSWORD}
    }
  }
  fallbacks = [
    {
      replicatedServersConfig {
        nodeAddresses = [
          "redis://"${REDIS_MASTER_URL},
          "redis://"${REDIS_SLAVE_URL}
        ]
        clientName = "event-log-verification-service"
        password = ${REDIS_PASSWORD}
      }
    }
  ]
}

eventLog {

  gremlin {

    hosts = localhost
    port = 8282

    connectionPool {
      reconnectInterval = 500
      maxWaitForConnection = 6000
    }
    serializer {
      className = org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV3d0
      config {
        ioRegistries = [org.janusgraph.graphdb.tinkerpop.JanusGraphIoRegistry]
      }
    }

    safeMode = false

  }

  cassandra {

    cluster {

      keyspace: "event_log"
      preparedStatementCacheSize: 1000
      //Comma-separeted values of IP/Hostname and ports
      contactPoints: "localhost:9042"
      //ANY, ONE, TWO, THREE, QUORUM, ALL, LOCAL_QUORUM, EACH_QUORUM, SERIAL, LOCAL_SERIAL, LOCAL_ONE
      consistencyLevel = "LOCAL_ONE"
      serialConsistencyLevel = "SERIAL"
      withSSL: false
      username: ""
      password: ""

    }

  }

  metrics {
    prometheus {
      port = 4321
    }
  }

  executionContext {
    threadPoolSize = 5
  }

}
