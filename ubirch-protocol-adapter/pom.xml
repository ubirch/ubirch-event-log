<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- parent pom -->
    <parent>
        <groupId>com.ubirch</groupId>
        <artifactId>event-log</artifactId>
        <version>1.2.0</version>
    </parent>

    <!-- basic info -->
    <artifactId>ubirch-protocol-adapter</artifactId>
    <version>1.2.0</version>
    <name>${project.artifactId}</name>
    <description>ubirch protocol adaptor service for the Ubirch Platform</description>
    <inceptionYear>2018</inceptionYear>

    <dependencies>

        <!-- Core -->
        <dependency>
            <groupId>com.ubirch</groupId>
            <artifactId>event-log-core</artifactId>
            <version>1.2.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.ubirch/ubirch-kafka-envelope -->
        <dependency>
            <groupId>com.ubirch</groupId>
            <artifactId>ubirch-kafka-envelope</artifactId>
            <version>1.0.1</version>
        </dependency>


        <!-- Test -->

        <dependency>
            <groupId>net.manub</groupId>
            <artifactId>scalatest-embedded-kafka_${scala.compat.version}</artifactId>
            <version>${scalatest-embedded-kafka}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.github.nosan</groupId>
            <artifactId>embedded-cassandra-test</artifactId>
            <version>${embedded-cassandra-test}</version>
        </dependency>


    </dependencies>

    <properties>

        <!-- versions -->

        <build.number>${timestamp}-dev</build.number>

        <!-- plugins -->
        <scala-maven-plugin.version>3.3.2</scala-maven-plugin.version>
        <maven-surefire-plugin.version>2.7</maven-surefire-plugin.version>
        <scalatest-maven-plugin.version>1.0</scalatest-maven-plugin.version>
        <maven-jar-plugin.version>2.6</maven-jar-plugin.version>
        <dockerfile-maven-plugin.version>1.4.4</dockerfile-maven-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
        <scalatest-embedded-kafka>2.0.0</scalatest-embedded-kafka>
        <embedded-cassandra-test>1.2.9</embedded-cassandra-test>
        <!-- plugins -->

        <!-- versions -->

    </properties>

    <build>

        <plugins>

            <plugin>
                <!-- see http://davidb.github.com/scala-maven-plugin -->
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scala-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <args>
                                <arg>-dependencyfile</arg>
                                <arg>${project.build.directory}/.scala_dependencies</arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- disable surefire -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <!-- enable scalatest -->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>${scalatest-maven-plugin.version}</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.ubirch.adapter.Service</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!-- create and/or push the created docker image -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <buildDirectory>${project.build.outputDirectory}</buildDirectory>
                    <repository>ubirch/${project.artifactId}</repository>
                    <tag>${build.number}</tag>
                    <buildArgs>
                        <VERSION>${project.version}</VERSION>
                        <BUILD>${build.number}</BUILD>
                        <SERVICE_NAME>${project.name}</SERVICE_NAME>
                        <JAR_LIBS>target/lib</JAR_LIBS>
                        <JAR_FILE>target/${project.build.finalName}.${project.packaging}</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
            <!-- for mvn deploy to work, disable the default deploy plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- copies helm charts folder to target/helm-charts and replaces the docker image tag -->
            <!-- https://stackoverflow.com/questions/10923944/maven-resources-plugin-error-using-copy-resources-goal-resources-outputdire -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/helm-charts</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../helm-charts</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
