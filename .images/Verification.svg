<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1496px" preserveAspectRatio="none" style="width:624px;height:1496px;background:#FFFFFF;" version="1.1" viewBox="0 0 624 1496" width="624px" zoomAndPan="magnify"><defs><filter height="300%" id="f1w68b99d9s6n1" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><line style="stroke:#A80036;stroke-width:1.0;" x1="60" x2="60" y1="56.5938" y2="248.2578"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,4.0;" x1="60" x2="60" y1="248.2578" y2="276.2578"/><line style="stroke:#A80036;stroke-width:1.0;" x1="60" x2="60" y1="276.2578" y2="584.3203"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,4.0;" x1="60" x2="60" y1="584.3203" y2="612.3203"/><line style="stroke:#A80036;stroke-width:1.0;" x1="60" x2="60" y1="612.3203" y2="977.6484"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,4.0;" x1="60" x2="60" y1="977.6484" y2="1005.6484"/><line style="stroke:#A80036;stroke-width:1.0;" x1="60" x2="60" y1="1005.6484" y2="1399.1094"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,4.0;" x1="60" x2="60" y1="1399.1094" y2="1427.1094"/><line style="stroke:#A80036;stroke-width:1.0;" x1="60" x2="60" y1="1427.1094" y2="1437.1094"/><line style="stroke:#A80036;stroke-width:1.0;" x1="275" x2="275" y1="56.5938" y2="248.2578"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,4.0;" x1="275" x2="275" y1="248.2578" y2="276.2578"/><line style="stroke:#A80036;stroke-width:1.0;" x1="275" x2="275" y1="276.2578" y2="584.3203"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,4.0;" x1="275" x2="275" y1="584.3203" y2="612.3203"/><line style="stroke:#A80036;stroke-width:1.0;" x1="275" x2="275" y1="612.3203" y2="977.6484"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,4.0;" x1="275" x2="275" y1="977.6484" y2="1005.6484"/><line style="stroke:#A80036;stroke-width:1.0;" x1="275" x2="275" y1="1005.6484" y2="1399.1094"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,4.0;" x1="275" x2="275" y1="1399.1094" y2="1427.1094"/><line style="stroke:#A80036;stroke-width:1.0;" x1="275" x2="275" y1="1427.1094" y2="1437.1094"/><rect fill="#FEFECE" filter="url(#f1w68b99d9s6n1)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="67" x="25" y="21.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="32" y="41.292">Identity</text><rect fill="#FEFECE" filter="url(#f1w68b99d9s6n1)" height="30.2969" style="stroke:#A80036;stroke-width:1.5;" width="67" x="25" y="1436.1094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="53" x="32" y="1456.1045">Identity</text><rect fill="#FEFECE" filter="url(#f1w68b99d9s6n1)" height="46.5938" style="stroke:#A80036;stroke-width:1.5;" width="157" x="195" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="208.5" y="24.9951">&lt;&lt;Verification&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="202" y="41.292">Ubirch Trust Service</text><rect fill="#FEFECE" filter="url(#f1w68b99d9s6n1)" height="46.5938" style="stroke:#A80036;stroke-width:1.5;" width="157" x="195" y="1436.1094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="208.5" y="1456.1045">&lt;&lt;Verification&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="202" y="1472.4014">Ubirch Trust Service</text><path d="M5,71.5938 L5,96.5938 L331,96.5938 L331,81.5938 L321,71.5938 L5,71.5938 " fill="#FBFB77" filter="url(#f1w68b99d9s6n1)" style="stroke:#A80036;stroke-width:1.0;"/><path d="M321,71.5938 L321,81.5938 L331,81.5938 L321,71.5938 " fill="#FBFB77" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="151" x="86" y="88.6606">Verification 1: /api/upp:</text><polygon fill="#A80036" points="263.5,122.8594,273.5,126.8594,263.5,130.8594,267.5,126.8594" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="60.5" x2="269.5" y1="126.8594" y2="126.8594"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="117" x="67.5" y="121.7935">/api/v2/upp (hash)</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="155.9922" y2="155.9922"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="155.9922" y2="168.9922"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="168.9922" y2="168.9922"/><polygon fill="#A80036" points="286.5,164.9922,276.5,168.9922,286.5,172.9922,282.5,168.9922" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="248" x="282.5" y="150.9263">checks if UPP is known in cache or DB</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="198.125" y2="198.125"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="198.125" y2="211.125"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="211.125" y2="211.125"/><polygon fill="#A80036" points="286.5,207.125,276.5,211.125,286.5,215.125,282.5,211.125" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="213" x="282.5" y="193.0591">checks if UPP is structurely valid</text><polygon fill="#A80036" points="71.5,236.2578,61.5,240.2578,71.5,244.2578,67.5,240.2578" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="65.5" x2="274.5" y1="240.2578" y2="240.2578"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="16" x="77.5" y="235.1919">ok</text><path d="M5,281.2578 L5,306.2578 L331,306.2578 L331,291.2578 L321,281.2578 L5,281.2578 " fill="#FBFB77" filter="url(#f1w68b99d9s6n1)" style="stroke:#A80036;stroke-width:1.0;"/><path d="M321,281.2578 L321,291.2578 L331,291.2578 L321,281.2578 " fill="#FBFB77" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="189" x="67" y="298.3247">Verification 2: /api/upp/verify</text><polygon fill="#A80036" points="263.5,332.5234,273.5,336.5234,263.5,340.5234,267.5,336.5234" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="60.5" x2="269.5" y1="336.5234" y2="336.5234"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="159" x="67.5" y="331.4575">/api/v2/upp/verify (hash)</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="365.6563" y2="365.6563"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="365.6563" y2="378.6563"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="378.6563" y2="378.6563"/><polygon fill="#A80036" points="286.5,374.6563,276.5,378.6563,286.5,382.6563,282.5,378.6563" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="248" x="282.5" y="360.5903">checks if UPP is known in cache or DB</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="407.7891" y2="407.7891"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="407.7891" y2="420.7891"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="420.7891" y2="420.7891"/><polygon fill="#A80036" points="286.5,416.7891,276.5,420.7891,286.5,424.7891,282.5,420.7891" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="213" x="282.5" y="402.7231">checks if UPP is structurely valid</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="449.9219" y2="449.9219"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="449.9219" y2="462.9219"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="462.9219" y2="462.9219"/><polygon fill="#A80036" points="286.5,458.9219,276.5,462.9219,286.5,466.9219,282.5,462.9219" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="175" x="282.5" y="444.856">gets public key for identity</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="492.0547" y2="492.0547"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="492.0547" y2="505.0547"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="505.0547" y2="505.0547"/><polygon fill="#A80036" points="286.5,501.0547,276.5,505.0547,286.5,509.0547,282.5,505.0547" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="161" x="282.5" y="486.9888">verifies signature of UPP</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="534.1875" y2="534.1875"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="534.1875" y2="547.1875"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="547.1875" y2="547.1875"/><polygon fill="#A80036" points="286.5,543.1875,276.5,547.1875,286.5,551.1875,282.5,547.1875" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="201" x="282.5" y="529.1216">finds UPP chain (previous UPP)</text><polygon fill="#A80036" points="71.5,572.3203,61.5,576.3203,71.5,580.3203,67.5,576.3203" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="65.5" x2="274.5" y1="576.3203" y2="576.3203"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="16" x="77.5" y="571.2544">ok</text><path d="M5,617.3203 L5,642.3203 L331,642.3203 L331,627.3203 L321,617.3203 L5,617.3203 " fill="#FBFB77" filter="url(#f1w68b99d9s6n1)" style="stroke:#A80036;stroke-width:1.0;"/><path d="M321,617.3203 L321,627.3203 L331,627.3203 L321,617.3203 " fill="#FBFB77" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="237" x="43" y="634.3872">Verification 3: /api/upp/verify/anchor</text><polygon fill="#A80036" points="263.5,668.5859,273.5,672.5859,263.5,676.5859,267.5,672.5859" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="60.5" x2="269.5" y1="672.5859" y2="672.5859"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="191" x="67.5" y="667.52">/api/upp/verify/anchor  (hash)</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="701.7188" y2="701.7188"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="701.7188" y2="714.7188"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="714.7188" y2="714.7188"/><polygon fill="#A80036" points="286.5,710.7188,276.5,714.7188,286.5,718.7188,282.5,714.7188" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="248" x="282.5" y="696.6528">checks if UPP is known in cache or DB</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="743.8516" y2="743.8516"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="743.8516" y2="756.8516"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="756.8516" y2="756.8516"/><polygon fill="#A80036" points="286.5,752.8516,276.5,756.8516,286.5,760.8516,282.5,756.8516" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="213" x="282.5" y="738.7856">checks if UPP is structurely valid</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="801.1172" y2="801.1172"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="801.1172" y2="814.1172"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="814.1172" y2="814.1172"/><polygon fill="#A80036" points="286.5,810.1172,276.5,814.1172,286.5,818.1172,282.5,814.1172" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="331" x="282.5" y="780.9185">finds the shortest path to upper-bound blockchains</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="287" x="286.5" y="796.0513">(blockchains.timestamps &gt; upp.timestamp)</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="843.25" y2="843.25"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="843.25" y2="856.25"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="856.25" y2="856.25"/><polygon fill="#A80036" points="286.5,852.25,276.5,856.25,286.5,860.25,282.5,856.25" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="175" x="282.5" y="838.1841">gets public key for identity</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="885.3828" y2="885.3828"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="885.3828" y2="898.3828"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="898.3828" y2="898.3828"/><polygon fill="#A80036" points="286.5,894.3828,276.5,898.3828,286.5,902.3828,282.5,898.3828" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="161" x="282.5" y="880.3169">verifies signature of UPP</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="927.5156" y2="927.5156"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="927.5156" y2="940.5156"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="940.5156" y2="940.5156"/><polygon fill="#A80036" points="286.5,936.5156,276.5,940.5156,286.5,944.5156,282.5,940.5156" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="201" x="282.5" y="922.4497">finds UPP chain (previous UPP)</text><polygon fill="#A80036" points="71.5,965.6484,61.5,969.6484,71.5,973.6484,67.5,969.6484" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="65.5" x2="274.5" y1="969.6484" y2="969.6484"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="16" x="77.5" y="964.5825">ok</text><path d="M5,1010.6484 L5,1035.6484 L331,1035.6484 L331,1020.6484 L321,1010.6484 L5,1010.6484 " fill="#FBFB77" filter="url(#f1w68b99d9s6n1)" style="stroke:#A80036;stroke-width:1.0;"/><path d="M321,1010.6484 L321,1020.6484 L331,1020.6484 L321,1010.6484 " fill="#FBFB77" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="234" x="44.5" y="1027.7153">Verification 4: /api/upp/verify/record</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="1065.9141" y2="1065.9141"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="1065.9141" y2="1078.9141"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="1078.9141" y2="1078.9141"/><polygon fill="#A80036" points="286.5,1074.9141,276.5,1078.9141,286.5,1082.9141,282.5,1078.9141" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="248" x="282.5" y="1060.8481">checks if UPP is known in cache or DB</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="1108.0469" y2="1108.0469"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="1108.0469" y2="1121.0469"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="1121.0469" y2="1121.0469"/><polygon fill="#A80036" points="286.5,1117.0469,276.5,1121.0469,286.5,1125.0469,282.5,1121.0469" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="213" x="282.5" y="1102.981">checks if UPP is structurely valid</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="1165.3125" y2="1165.3125"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="1165.3125" y2="1178.3125"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="1178.3125" y2="1178.3125"/><polygon fill="#A80036" points="286.5,1174.3125,276.5,1178.3125,286.5,1182.3125,282.5,1178.3125" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="331" x="282.5" y="1145.1138">finds the shortest path to upper-bound blockchains</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="287" x="286.5" y="1160.2466">(blockchains.timestamps &gt; upp.timestamp)</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="1222.5781" y2="1222.5781"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="1222.5781" y2="1235.5781"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="1235.5781" y2="1235.5781"/><polygon fill="#A80036" points="286.5,1231.5781,276.5,1235.5781,286.5,1239.5781,282.5,1235.5781" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="330" x="282.5" y="1202.3794">finds the shortest path to lower-bound blockchains</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="287" x="286.5" y="1217.5122">(blockchains.timestamps &lt; upp.timestamp)</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="1264.7109" y2="1264.7109"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="1264.7109" y2="1277.7109"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="1277.7109" y2="1277.7109"/><polygon fill="#A80036" points="286.5,1273.7109,276.5,1277.7109,286.5,1281.7109,282.5,1277.7109" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="175" x="282.5" y="1259.645">gets public key for identity</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="1306.8438" y2="1306.8438"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="1306.8438" y2="1319.8438"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="1319.8438" y2="1319.8438"/><polygon fill="#A80036" points="286.5,1315.8438,276.5,1319.8438,286.5,1323.8438,282.5,1319.8438" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="161" x="282.5" y="1301.7778">verifies signature of UPP</text><line style="stroke:#A80036;stroke-width:1.0;" x1="275.5" x2="317.5" y1="1348.9766" y2="1348.9766"/><line style="stroke:#A80036;stroke-width:1.0;" x1="317.5" x2="317.5" y1="1348.9766" y2="1361.9766"/><line style="stroke:#A80036;stroke-width:1.0;" x1="276.5" x2="317.5" y1="1361.9766" y2="1361.9766"/><polygon fill="#A80036" points="286.5,1357.9766,276.5,1361.9766,286.5,1365.9766,282.5,1361.9766" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="201" x="282.5" y="1343.9106">finds UPP chain (previous UPP)</text><polygon fill="#A80036" points="71.5,1387.1094,61.5,1391.1094,71.5,1395.1094,67.5,1391.1094" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="65.5" x2="274.5" y1="1391.1094" y2="1391.1094"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="16" x="77.5" y="1386.0435">ok</text><!--MD5=[cf38605414df63e51b688115066979d5]
@startuml
'https://plantuml.com/sequence-diagram

participant Identity as identity
participant trust_service_verification [
  <<Verification>>
  Ubirch Trust Service
]

note across: Verification 1: /api/upp:
identity -> trust_service_verification:/api/v2/upp (hash)
trust_service_verification -> trust_service_verification: checks if UPP is known in cache or DB
trust_service_verification -> trust_service_verification: checks if UPP is structurely valid
identity <- - trust_service_verification: ok
......
note across: Verification 2: /api/upp/verify
identity -> trust_service_verification:/api/v2/upp/verify (hash)
trust_service_verification -> trust_service_verification: checks if UPP is known in cache or DB
trust_service_verification -> trust_service_verification: checks if UPP is structurely valid
trust_service_verification -> trust_service_verification: gets public key for identity
trust_service_verification -> trust_service_verification: verifies signature of UPP
trust_service_verification -> trust_service_verification: finds UPP chain (previous UPP)
identity <- - trust_service_verification: ok
......
note across: Verification 3: /api/upp/verify/anchor
identity -> trust_service_verification:/api/upp/verify/anchor  (hash)
trust_service_verification -> trust_service_verification: checks if UPP is known in cache or DB
trust_service_verification -> trust_service_verification: checks if UPP is structurely valid
trust_service_verification -> trust_service_verification: finds the shortest path to upper-bound blockchains \n (blockchains.timestamps > upp.timestamp)
trust_service_verification -> trust_service_verification: gets public key for identity
trust_service_verification -> trust_service_verification: verifies signature of UPP
trust_service_verification -> trust_service_verification: finds UPP chain (previous UPP)
identity <- - trust_service_verification: ok
......
note across: Verification 4: /api/upp/verify/record
trust_service_verification -> trust_service_verification: checks if UPP is known in cache or DB
trust_service_verification -> trust_service_verification: checks if UPP is structurely valid
trust_service_verification -> trust_service_verification: finds the shortest path to upper-bound blockchains \n (blockchains.timestamps > upp.timestamp)
trust_service_verification -> trust_service_verification: finds the shortest path to lower-bound blockchains \n (blockchains.timestamps < upp.timestamp)
trust_service_verification -> trust_service_verification: gets public key for identity
trust_service_verification -> trust_service_verification: verifies signature of UPP
trust_service_verification -> trust_service_verification: finds UPP chain (previous UPP)
identity <- - trust_service_verification: ok
......

@enduml

@startuml

participant Identity as identity
participant trust_service_verification [
  <<Verification>>
  Ubirch Trust Service
]

note across: Verification 1: /api/upp:
identity -> trust_service_verification:/api/v2/upp (hash)
trust_service_verification -> trust_service_verification: checks if UPP is known in cache or DB
trust_service_verification -> trust_service_verification: checks if UPP is structurely valid
identity <- - trust_service_verification: ok
......
note across: Verification 2: /api/upp/verify
identity -> trust_service_verification:/api/v2/upp/verify (hash)
trust_service_verification -> trust_service_verification: checks if UPP is known in cache or DB
trust_service_verification -> trust_service_verification: checks if UPP is structurely valid
trust_service_verification -> trust_service_verification: gets public key for identity
trust_service_verification -> trust_service_verification: verifies signature of UPP
trust_service_verification -> trust_service_verification: finds UPP chain (previous UPP)
identity <- - trust_service_verification: ok
......
note across: Verification 3: /api/upp/verify/anchor
identity -> trust_service_verification:/api/upp/verify/anchor  (hash)
trust_service_verification -> trust_service_verification: checks if UPP is known in cache or DB
trust_service_verification -> trust_service_verification: checks if UPP is structurely valid
trust_service_verification -> trust_service_verification: finds the shortest path to upper-bound blockchains \n (blockchains.timestamps > upp.timestamp)
trust_service_verification -> trust_service_verification: gets public key for identity
trust_service_verification -> trust_service_verification: verifies signature of UPP
trust_service_verification -> trust_service_verification: finds UPP chain (previous UPP)
identity <- - trust_service_verification: ok
......
note across: Verification 4: /api/upp/verify/record
trust_service_verification -> trust_service_verification: checks if UPP is known in cache or DB
trust_service_verification -> trust_service_verification: checks if UPP is structurely valid
trust_service_verification -> trust_service_verification: finds the shortest path to upper-bound blockchains \n (blockchains.timestamps > upp.timestamp)
trust_service_verification -> trust_service_verification: finds the shortest path to lower-bound blockchains \n (blockchains.timestamps < upp.timestamp)
trust_service_verification -> trust_service_verification: gets public key for identity
trust_service_verification -> trust_service_verification: verifies signature of UPP
trust_service_verification -> trust_service_verification: finds UPP chain (previous UPP)
identity <- - trust_service_verification: ok
......

@enduml

PlantUML version 1.2022.1(Tue Feb 01 19:19:58 CET 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>