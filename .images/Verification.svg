<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1557px" preserveAspectRatio="none" style="width:651px;height:1557px;background:#FFFFFF;" version="1.1" viewBox="0 0 651 1557" width="651px" zoomAndPan="magnify"><defs><filter height="300%" id="f16dr8q6sazun1" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><line style="stroke:#A80036;stroke-width:1.0;" x1="87" x2="87" y1="56.5938" y2="263.3906"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,4.0;" x1="87" x2="87" y1="263.3906" y2="291.3906"/><line style="stroke:#A80036;stroke-width:1.0;" x1="87" x2="87" y1="291.3906" y2="614.5859"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,4.0;" x1="87" x2="87" y1="614.5859" y2="642.5859"/><line style="stroke:#A80036;stroke-width:1.0;" x1="87" x2="87" y1="642.5859" y2="1023.0469"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,4.0;" x1="87" x2="87" y1="1023.0469" y2="1051.0469"/><line style="stroke:#A80036;stroke-width:1.0;" x1="87" x2="87" y1="1051.0469" y2="1459.6406"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,4.0;" x1="87" x2="87" y1="1459.6406" y2="1487.6406"/><line style="stroke:#A80036;stroke-width:1.0;" x1="87" x2="87" y1="1487.6406" y2="1497.6406"/><line style="stroke:#A80036;stroke-width:1.0;" x1="302" x2="302" y1="56.5938" y2="263.3906"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,4.0;" x1="302" x2="302" y1="263.3906" y2="291.3906"/><line style="stroke:#A80036;stroke-width:1.0;" x1="302" x2="302" y1="291.3906" y2="614.5859"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,4.0;" x1="302" x2="302" y1="614.5859" y2="642.5859"/><line style="stroke:#A80036;stroke-width:1.0;" x1="302" x2="302" y1="642.5859" y2="1023.0469"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,4.0;" x1="302" x2="302" y1="1023.0469" y2="1051.0469"/><line style="stroke:#A80036;stroke-width:1.0;" x1="302" x2="302" y1="1051.0469" y2="1459.6406"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:1.0,4.0;" x1="302" x2="302" y1="1459.6406" y2="1487.6406"/><line style="stroke:#A80036;stroke-width:1.0;" x1="302" x2="302" y1="1487.6406" y2="1497.6406"/><rect fill="#FEFECE" filter="url(#f16dr8q6sazun1)" height="46.5938" style="stroke:#A80036;stroke-width:1.5;" width="161" x="5" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="37" y="24.9951">&lt;&lt;Identity&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="12" y="41.292">Device|Thing|Person</text><rect fill="#FEFECE" filter="url(#f16dr8q6sazun1)" height="46.5938" style="stroke:#A80036;stroke-width:1.5;" width="161" x="5" y="1496.6406"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="37" y="1516.6357">&lt;&lt;Identity&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="12" y="1532.9326">Device|Thing|Person</text><rect fill="#FEFECE" filter="url(#f16dr8q6sazun1)" height="46.5938" style="stroke:#A80036;stroke-width:1.5;" width="157" x="222" y="5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="235.5" y="24.9951">&lt;&lt;Verification&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="229" y="41.292">Ubirch Trust Service</text><rect fill="#FEFECE" filter="url(#f16dr8q6sazun1)" height="46.5938" style="stroke:#A80036;stroke-width:1.5;" width="157" x="222" y="1496.6406"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="130" x="235.5" y="1516.6357">&lt;&lt;Verification&gt;&gt;</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="229" y="1532.9326">Ubirch Trust Service</text><path d="M8,71.5938 L8,96.5938 L381,96.5938 L381,81.5938 L371,71.5938 L8,71.5938 " fill="#FBFB77" filter="url(#f16dr8q6sazun1)" style="stroke:#A80036;stroke-width:1.0;"/><path d="M371,71.5938 L371,81.5938 L381,81.5938 L371,71.5938 " fill="#FBFB77" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="151" x="112.5" y="88.6606">Verification 1: /api/upp:</text><polygon fill="#A80036" points="290.5,122.8594,300.5,126.8594,290.5,130.8594,294.5,126.8594" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="87.5" x2="296.5" y1="126.8594" y2="126.8594"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="117" x="94.5" y="121.7935">/api/v2/upp (hash)</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="171.125" y2="171.125"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="171.125" y2="184.125"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="184.125" y2="184.125"/><polygon fill="#A80036" points="313.5,180.125,303.5,184.125,313.5,188.125,309.5,184.125" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="195" x="309.5" y="150.9263">checks if UPP is known on the</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="310" x="309.5" y="166.0591">in-memory or disk data store (redis, cassandra)</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="213.2578" y2="213.2578"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="213.2578" y2="226.2578"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="226.2578" y2="226.2578"/><polygon fill="#A80036" points="313.5,222.2578,303.5,226.2578,313.5,230.2578,309.5,226.2578" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="213" x="309.5" y="208.1919">checks if UPP is structurely valid</text><polygon fill="#A80036" points="98.5,251.3906,88.5,255.3906,98.5,259.3906,94.5,255.3906" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="92.5" x2="301.5" y1="255.3906" y2="255.3906"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="16" x="104.5" y="250.3247">ok</text><path d="M8,296.3906 L8,321.3906 L381,321.3906 L381,306.3906 L371,296.3906 L8,296.3906 " fill="#FBFB77" filter="url(#f16dr8q6sazun1)" style="stroke:#A80036;stroke-width:1.0;"/><path d="M371,296.3906 L371,306.3906 L381,306.3906 L371,296.3906 " fill="#FBFB77" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="189" x="93.5" y="313.4575">Verification 2: /api/upp/verify</text><polygon fill="#A80036" points="290.5,347.6563,300.5,351.6563,290.5,355.6563,294.5,351.6563" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="87.5" x2="296.5" y1="351.6563" y2="351.6563"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="159" x="94.5" y="346.5903">/api/v2/upp/verify (hash)</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="395.9219" y2="395.9219"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="395.9219" y2="408.9219"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="408.9219" y2="408.9219"/><polygon fill="#A80036" points="313.5,404.9219,303.5,408.9219,313.5,412.9219,309.5,408.9219" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="195" x="309.5" y="375.7231">checks if UPP is known on the</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="310" x="309.5" y="390.856">in-memory or disk data store (redis, cassandra)</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="438.0547" y2="438.0547"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="438.0547" y2="451.0547"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="451.0547" y2="451.0547"/><polygon fill="#A80036" points="313.5,447.0547,303.5,451.0547,313.5,455.0547,309.5,451.0547" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="213" x="309.5" y="432.9888">checks if UPP is structurely valid</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="480.1875" y2="480.1875"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="480.1875" y2="493.1875"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="493.1875" y2="493.1875"/><polygon fill="#A80036" points="313.5,489.1875,303.5,493.1875,313.5,497.1875,309.5,493.1875" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="175" x="309.5" y="475.1216">gets public key for identity</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="522.3203" y2="522.3203"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="522.3203" y2="535.3203"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="535.3203" y2="535.3203"/><polygon fill="#A80036" points="313.5,531.3203,303.5,535.3203,313.5,539.3203,309.5,535.3203" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="161" x="309.5" y="517.2544">verifies signature of UPP</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="564.4531" y2="564.4531"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="564.4531" y2="577.4531"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="577.4531" y2="577.4531"/><polygon fill="#A80036" points="313.5,573.4531,303.5,577.4531,313.5,581.4531,309.5,577.4531" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="201" x="309.5" y="559.3872">finds UPP chain (previous UPP)</text><polygon fill="#A80036" points="98.5,602.5859,88.5,606.5859,98.5,610.5859,94.5,606.5859" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="92.5" x2="301.5" y1="606.5859" y2="606.5859"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="16" x="104.5" y="601.52">ok</text><path d="M8,647.5859 L8,672.5859 L381,672.5859 L381,657.5859 L371,647.5859 L8,647.5859 " fill="#FBFB77" filter="url(#f16dr8q6sazun1)" style="stroke:#A80036;stroke-width:1.0;"/><path d="M371,647.5859 L371,657.5859 L381,657.5859 L371,647.5859 " fill="#FBFB77" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="237" x="69.5" y="664.6528">Verification 3: /api/upp/verify/anchor</text><polygon fill="#A80036" points="290.5,698.8516,300.5,702.8516,290.5,706.8516,294.5,702.8516" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;" x1="87.5" x2="296.5" y1="702.8516" y2="702.8516"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="191" x="94.5" y="697.7856">/api/upp/verify/anchor  (hash)</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="747.1172" y2="747.1172"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="747.1172" y2="760.1172"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="760.1172" y2="760.1172"/><polygon fill="#A80036" points="313.5,756.1172,303.5,760.1172,313.5,764.1172,309.5,760.1172" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="195" x="309.5" y="726.9185">checks if UPP is known on the</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="310" x="309.5" y="742.0513">in-memory or disk data store (redis, cassandra)</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="789.25" y2="789.25"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="789.25" y2="802.25"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="802.25" y2="802.25"/><polygon fill="#A80036" points="313.5,798.25,303.5,802.25,313.5,806.25,309.5,802.25" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="213" x="309.5" y="784.1841">checks if UPP is structurely valid</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="846.5156" y2="846.5156"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="846.5156" y2="859.5156"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="859.5156" y2="859.5156"/><polygon fill="#A80036" points="313.5,855.5156,303.5,859.5156,313.5,863.5156,309.5,859.5156" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="331" x="309.5" y="826.3169">finds the shortest path to upper-bound blockchains</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="287" x="313.5" y="841.4497">(blockchains.timestamps &gt; upp.timestamp)</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="888.6484" y2="888.6484"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="888.6484" y2="901.6484"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="901.6484" y2="901.6484"/><polygon fill="#A80036" points="313.5,897.6484,303.5,901.6484,313.5,905.6484,309.5,901.6484" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="175" x="309.5" y="883.5825">gets public key for identity</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="930.7813" y2="930.7813"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="930.7813" y2="943.7813"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="943.7813" y2="943.7813"/><polygon fill="#A80036" points="313.5,939.7813,303.5,943.7813,313.5,947.7813,309.5,943.7813" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="161" x="309.5" y="925.7153">verifies signature of UPP</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="972.9141" y2="972.9141"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="972.9141" y2="985.9141"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="985.9141" y2="985.9141"/><polygon fill="#A80036" points="313.5,981.9141,303.5,985.9141,313.5,989.9141,309.5,985.9141" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="201" x="309.5" y="967.8481">finds UPP chain (previous UPP)</text><polygon fill="#A80036" points="98.5,1011.0469,88.5,1015.0469,98.5,1019.0469,94.5,1015.0469" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="92.5" x2="301.5" y1="1015.0469" y2="1015.0469"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="16" x="104.5" y="1009.981">ok</text><path d="M8,1056.0469 L8,1081.0469 L381,1081.0469 L381,1066.0469 L371,1056.0469 L8,1056.0469 " fill="#FBFB77" filter="url(#f16dr8q6sazun1)" style="stroke:#A80036;stroke-width:1.0;"/><path d="M371,1056.0469 L371,1066.0469 L381,1066.0469 L371,1056.0469 " fill="#FBFB77" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="234" x="71" y="1073.1138">Verification 4: /api/upp/verify/record</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="1126.4453" y2="1126.4453"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="1126.4453" y2="1139.4453"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="1139.4453" y2="1139.4453"/><polygon fill="#A80036" points="313.5,1135.4453,303.5,1139.4453,313.5,1143.4453,309.5,1139.4453" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="195" x="309.5" y="1106.2466">checks if UPP is known on the</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="310" x="309.5" y="1121.3794">in-memory or disk data store (redis, cassandra)</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="1168.5781" y2="1168.5781"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="1168.5781" y2="1181.5781"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="1181.5781" y2="1181.5781"/><polygon fill="#A80036" points="313.5,1177.5781,303.5,1181.5781,313.5,1185.5781,309.5,1181.5781" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="213" x="309.5" y="1163.5122">checks if UPP is structurely valid</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="1225.8438" y2="1225.8438"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="1225.8438" y2="1238.8438"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="1238.8438" y2="1238.8438"/><polygon fill="#A80036" points="313.5,1234.8438,303.5,1238.8438,313.5,1242.8438,309.5,1238.8438" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="331" x="309.5" y="1205.645">finds the shortest path to upper-bound blockchains</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="287" x="313.5" y="1220.7778">(blockchains.timestamps &gt; upp.timestamp)</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="1283.1094" y2="1283.1094"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="1283.1094" y2="1296.1094"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="1296.1094" y2="1296.1094"/><polygon fill="#A80036" points="313.5,1292.1094,303.5,1296.1094,313.5,1300.1094,309.5,1296.1094" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="330" x="309.5" y="1262.9106">finds the shortest path to lower-bound blockchains</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="287" x="313.5" y="1278.0435">(blockchains.timestamps &lt; upp.timestamp)</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="1325.2422" y2="1325.2422"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="1325.2422" y2="1338.2422"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="1338.2422" y2="1338.2422"/><polygon fill="#A80036" points="313.5,1334.2422,303.5,1338.2422,313.5,1342.2422,309.5,1338.2422" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="175" x="309.5" y="1320.1763">gets public key for identity</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="1367.375" y2="1367.375"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="1367.375" y2="1380.375"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="1380.375" y2="1380.375"/><polygon fill="#A80036" points="313.5,1376.375,303.5,1380.375,313.5,1384.375,309.5,1380.375" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="161" x="309.5" y="1362.3091">verifies signature of UPP</text><line style="stroke:#A80036;stroke-width:1.0;" x1="302.5" x2="344.5" y1="1409.5078" y2="1409.5078"/><line style="stroke:#A80036;stroke-width:1.0;" x1="344.5" x2="344.5" y1="1409.5078" y2="1422.5078"/><line style="stroke:#A80036;stroke-width:1.0;" x1="303.5" x2="344.5" y1="1422.5078" y2="1422.5078"/><polygon fill="#A80036" points="313.5,1418.5078,303.5,1422.5078,313.5,1426.5078,309.5,1422.5078" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="201" x="309.5" y="1404.4419">finds UPP chain (previous UPP)</text><polygon fill="#A80036" points="98.5,1447.6406,88.5,1451.6406,98.5,1455.6406,94.5,1451.6406" style="stroke:#A80036;stroke-width:1.0;"/><line style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="92.5" x2="301.5" y1="1451.6406" y2="1451.6406"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="16" x="104.5" y="1446.5747">ok</text><!--MD5=[a47050c6fd3b23c96dd03c2caeeeb3f3]
@startuml
'https://plantuml.com/sequence-diagram

participant identity [
  <<Identity>>
 Device|Thing|Person
]
participant trust_service_verification [
  <<Verification>>
  Ubirch Trust Service
]

note across: Verification 1: /api/upp:
identity -> trust_service_verification:/api/v2/upp (hash)
trust_service_verification -> trust_service_verification: checks if UPP is known on the\nin-memory or disk data store (redis, cassandra)
trust_service_verification -> trust_service_verification: checks if UPP is structurely valid
identity <- - trust_service_verification: ok
......
note across: Verification 2: /api/upp/verify
identity -> trust_service_verification:/api/v2/upp/verify (hash)
trust_service_verification -> trust_service_verification: checks if UPP is known on the\nin-memory or disk data store (redis, cassandra)
trust_service_verification -> trust_service_verification: checks if UPP is structurely valid
trust_service_verification -> trust_service_verification: gets public key for identity
trust_service_verification -> trust_service_verification: verifies signature of UPP
trust_service_verification -> trust_service_verification: finds UPP chain (previous UPP)
identity <- - trust_service_verification: ok
......
note across: Verification 3: /api/upp/verify/anchor
identity -> trust_service_verification:/api/upp/verify/anchor  (hash)
trust_service_verification -> trust_service_verification: checks if UPP is known on the\nin-memory or disk data store (redis, cassandra)
trust_service_verification -> trust_service_verification: checks if UPP is structurely valid
trust_service_verification -> trust_service_verification: finds the shortest path to upper-bound blockchains \n (blockchains.timestamps > upp.timestamp)
trust_service_verification -> trust_service_verification: gets public key for identity
trust_service_verification -> trust_service_verification: verifies signature of UPP
trust_service_verification -> trust_service_verification: finds UPP chain (previous UPP)
identity <- - trust_service_verification: ok
......
note across: Verification 4: /api/upp/verify/record
trust_service_verification -> trust_service_verification: checks if UPP is known on the\nin-memory or disk data store (redis, cassandra)
trust_service_verification -> trust_service_verification: checks if UPP is structurely valid
trust_service_verification -> trust_service_verification: finds the shortest path to upper-bound blockchains \n (blockchains.timestamps > upp.timestamp)
trust_service_verification -> trust_service_verification: finds the shortest path to lower-bound blockchains \n (blockchains.timestamps < upp.timestamp)
trust_service_verification -> trust_service_verification: gets public key for identity
trust_service_verification -> trust_service_verification: verifies signature of UPP
trust_service_verification -> trust_service_verification: finds UPP chain (previous UPP)
identity <- - trust_service_verification: ok
......

@enduml

@startuml

participant identity [
  <<Identity>>
 Device|Thing|Person
]
participant trust_service_verification [
  <<Verification>>
  Ubirch Trust Service
]

note across: Verification 1: /api/upp:
identity -> trust_service_verification:/api/v2/upp (hash)
trust_service_verification -> trust_service_verification: checks if UPP is known on the\nin-memory or disk data store (redis, cassandra)
trust_service_verification -> trust_service_verification: checks if UPP is structurely valid
identity <- - trust_service_verification: ok
......
note across: Verification 2: /api/upp/verify
identity -> trust_service_verification:/api/v2/upp/verify (hash)
trust_service_verification -> trust_service_verification: checks if UPP is known on the\nin-memory or disk data store (redis, cassandra)
trust_service_verification -> trust_service_verification: checks if UPP is structurely valid
trust_service_verification -> trust_service_verification: gets public key for identity
trust_service_verification -> trust_service_verification: verifies signature of UPP
trust_service_verification -> trust_service_verification: finds UPP chain (previous UPP)
identity <- - trust_service_verification: ok
......
note across: Verification 3: /api/upp/verify/anchor
identity -> trust_service_verification:/api/upp/verify/anchor  (hash)
trust_service_verification -> trust_service_verification: checks if UPP is known on the\nin-memory or disk data store (redis, cassandra)
trust_service_verification -> trust_service_verification: checks if UPP is structurely valid
trust_service_verification -> trust_service_verification: finds the shortest path to upper-bound blockchains \n (blockchains.timestamps > upp.timestamp)
trust_service_verification -> trust_service_verification: gets public key for identity
trust_service_verification -> trust_service_verification: verifies signature of UPP
trust_service_verification -> trust_service_verification: finds UPP chain (previous UPP)
identity <- - trust_service_verification: ok
......
note across: Verification 4: /api/upp/verify/record
trust_service_verification -> trust_service_verification: checks if UPP is known on the\nin-memory or disk data store (redis, cassandra)
trust_service_verification -> trust_service_verification: checks if UPP is structurely valid
trust_service_verification -> trust_service_verification: finds the shortest path to upper-bound blockchains \n (blockchains.timestamps > upp.timestamp)
trust_service_verification -> trust_service_verification: finds the shortest path to lower-bound blockchains \n (blockchains.timestamps < upp.timestamp)
trust_service_verification -> trust_service_verification: gets public key for identity
trust_service_verification -> trust_service_verification: verifies signature of UPP
trust_service_verification -> trust_service_verification: finds UPP chain (previous UPP)
identity <- - trust_service_verification: ok
......

@enduml

PlantUML version 1.2022.1(Tue Feb 01 19:19:58 CET 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>