<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
		 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- parent pom -->
    <groupId>com.ubirch</groupId>
    <artifactId>event-log</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!-- license -->
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!-- properties -->

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <encoding>UTF-8</encoding>

        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyyMMdd</maven.build.timestamp.format>

        <!-- versions -->

        <scala.version>2.12.6</scala.version>
        <scala.compat.version>2.12</scala.compat.version>
        <scalatest.version>3.0.5</scalatest.version>
        <mockito.version>2.23.4</mockito.version>
        <scala.logging.version>3.9.0</scala.logging.version>
        <slf4j.api.version>1.7.15</slf4j.api.version>
        <logback-classic.version>1.2.3</logback-classic.version>
        <log4j-over-slf4j.version>1.7.25</log4j-over-slf4j.version>
        <jcl-over-slf4j.version>1.7.25</jcl-over-slf4j.version>


        <!-- plugins -->
        <scalariform.version>0.2.2</scalariform.version>
        <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
        <!-- plugins -->


        <!-- versions -->

    </properties>

    <!-- dependencies -->

    <dependencies>

        <!-- Scala -->

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <!-- Scala -->

        <!-- Logging -->

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.api.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.slf4j/log4j-over-slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${log4j-over-slf4j.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.slf4j/jcl-over-slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${jcl-over-slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>com.typesafe.scala-logging</groupId>
            <artifactId>scala-logging_${scala.compat.version}</artifactId>
            <version>${scala.logging.version}</version>
        </dependency>

        <!-- Logging -->


        <!-- Test -->

        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.compat.version}</artifactId>
            <version>${scalatest.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
        </dependency>

        <!-- Test -->

    </dependencies>


    <build>
        <plugins>
            <!-- code formatting -->
            <plugin>
                <groupId>com.github.tashoyan</groupId>
                <artifactId>scalariform-maven-plugin</artifactId>
                <version>${scalariform.version}</version>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                        <configuration>
                            <firstArgumentOnNewline>Force</firstArgumentOnNewline>
                            <firstParameterOnNewline>Force</firstParameterOnNewline>
                            <allowParamGroupsOnNewlines>true</allowParamGroupsOnNewlines>
                            <danglingCloseParenthesis>Force</danglingCloseParenthesis>
                            <doubleIndentConstructorArguments>true</doubleIndentConstructorArguments>
                            <doubleIndentMethodDeclaration>true</doubleIndentMethodDeclaration>
                            <newlineAtEndOfFile>true</newlineAtEndOfFile>
                            <placeScaladocAsterisksBeneathSecondAsterisk>true
                            </placeScaladocAsterisksBeneathSecondAsterisk>
                            <singleCasePatternOnNewline>false</singleCasePatternOnNewline>
                            <spacesAroundMultiImports>true</spacesAroundMultiImports>
                            <rewriteArrowSymbols>false</rewriteArrowSymbols>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- code formatting -->

            <!-- copy all dependencies into the target/lib dir for our docker image -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


    <!-- sub modules -->
    <modules>
        <module>event-log-core</module>
        <module>event-log-service</module>
        <module>event-log-sdk</module>
    </modules>

</project>