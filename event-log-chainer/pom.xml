<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- parent pom -->
    <parent>
        <groupId>com.ubirch</groupId>
        <artifactId>event-log</artifactId>
        <version>1.5.0</version>
    </parent>

    <!-- basic info -->
    <artifactId>event-log-chainer</artifactId>
    <version>3.0.0</version>
    <name>${project.artifactId}</name>
    <description>Event Logger Chainer for the ubirch Platform</description>
    <inceptionYear>2018</inceptionYear>

    <properties>

        <!-- build version -->

        <build.number>${timestamp}-dev</build.number>

        <!-- versions -->
        <scala-maven-plugin.version>3.3.2</scala-maven-plugin.version>
        <dockerfile-maven-plugin.version>1.4.4</dockerfile-maven-plugin.version>
        <maven-jar-plugin.version>2.6</maven-jar-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>

        <event-log-core.version>1.5.0</event-log-core.version>
        <ubirch-kafka-envelope.version>1.0.1</ubirch-kafka-envelope.version>
        <guice.version>4.1.0</guice.version>
        <guice.ext.version>4.1.0</guice.ext.version>
        <quill.cassandra.version>4.6.0</quill.cassandra.version>
        <joda-time.version>2.10</joda-time.version>
        <kafka-clients.version>2.6.3</kafka-clients.version>
        <json4s-native.version>3.6.0</json4s-native.version>
        <json4s-jackson.version>3.6.1</json4s-jackson.version>
        <json4s-ext>3.6.0</json4s-ext>
        <embedded-kafka>2.3.0</embedded-kafka>
        <embedded-cassandra-test>1.2.9</embedded-cassandra-test>
        <async-http-clien.version>2.10.3</async-http-clien.version>

        <!-- plugins -->
        <scala-maven-plugin.version>3.3.2</scala-maven-plugin.version>
        <maven-surefire-plugin.version>2.7</maven-surefire-plugin.version>
        <scalatest-maven-plugin.version>1.0</scalatest-maven-plugin.version>
        <!-- plugins -->

        <!-- versions -->

    </properties>

    <dependencies>

        <!-- Core -->

        <dependency>
            <groupId>com.ubirch</groupId>
            <artifactId>event-log-core</artifactId>
            <version>${event-log-core.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ubirch</groupId>
            <artifactId>ubirch-kafka-envelope</artifactId>
            <version>${ubirch-kafka-envelope.version}</version>
        </dependency>

        <dependency>
            <groupId>io.getquill</groupId>
            <artifactId>quill-cassandra_${scala.compat.version}</artifactId>
            <version>${quill.cassandra.version}</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka-clients.version}</version>
        </dependency>

        <!-- Util -->

        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-native_${scala.compat.version}</artifactId>
            <version>${json4s-native.version}</version>
        </dependency>

        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-jackson_${scala.compat.version}</artifactId>
            <version>${json4s-jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-ext_${scala.compat.version}</artifactId>
            <version>${json4s-ext}</version>
        </dependency>

        <dependency>
            <groupId>org.asynchttpclient</groupId>
            <artifactId>async-http-client</artifactId>
            <version>${async-http-clien.version}</version>
        </dependency>

        <!-- Test -->

        <dependency>
            <groupId>io.github.embeddedkafka</groupId>
            <artifactId>embedded-kafka_${scala.compat.version}</artifactId>
            <version>${embedded-kafka}</version>
        </dependency>

        <dependency>
            <groupId>com.github.nosan</groupId>
            <artifactId>embedded-cassandra-test</artifactId>
            <version>${embedded-cassandra-test}</version>
        </dependency>

    </dependencies>

    <build>

        <plugins>

            <plugin>
                <!-- see http://davidb.github.com/scala-maven-plugin -->
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scala-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <args>
                                <arg>-deprecation</arg>                      <!--  Emit warning and location for usages of deprecated APIs. -->
                                <arg>-encoding</arg> <arg>utf-8</arg>        <!--  Specify character encoding used by source files. -->
                                <arg>-explaintypes</arg>                     <!--  Explain type errors in more detail. -->
                                <arg>-feature</arg>                          <!--  Emit warning and location for usages of features that should be imported explicitly. -->
                                <arg>-unchecked</arg>                        <!--  Enable additional warnings where generated code depends on assumptions. -->
                                <arg>-Xcheckinit</arg>                       <!--  Wrap field accessors to throw an exception on uninitialized access. -->
                                <arg>-Xfatal-warnings</arg>                  <!--  Fail the compilation if there are any warnings. -->
                                <arg>-Xfuture</arg>                          <!--  Turn on future language features. -->
                                <arg>-Xlint:adapted-args</arg>               <!--  Warn if an argument list is modified to match the receiver. -->
                                <arg>-Xlint:by-name-right-associative</arg>  <!--  By-name parameter of right associative operator. -->
                                <arg>-Xlint:constant</arg>                   <!--  Evaluation of a constant arithmetic expression results in an error. -->
                                <arg>-Xlint:delayedinit-select</arg>         <!--  Selecting member of DelayedInit. -->
                                <arg>-Xlint:doc-detached</arg>               <!--  A Scaladoc comment appears to be detached from its element. -->
                                <arg>-Xlint:inaccessible</arg>               <!--  Warn about inaccessible types in method signatures. -->
                                <arg>-Xlint:infer-any</arg>                  <!--  Warn when a type argument is inferred to be `Any`. -->
                                <arg>-Xlint:missing-interpolator</arg>       <!--  A string literal appears to be missing an interpolator id. -->
                                <arg>-Xlint:nullary-override</arg>           <!--  Warn when non-nullary `def f()' overrides nullary `def f'. -->
                                <arg>-Xlint:option-implicit</arg>            <!--  Option.apply used implicit view. -->
                                <arg>-Xlint:package-object-classes</arg>     <!--  Class or object defined in package object. -->
                                <arg>-Xlint:poly-implicit-overload</arg>     <!--  Parameterized overloaded implicit methods are not visible as view bounds. -->
                                <arg>-Xlint:private-shadow</arg>             <!--  A private field (or class parameter) shadows a superclass field. -->
                                <arg>-Xlint:stars-align</arg>                <!--  Pattern sequence wildcard must align with sequence component. -->
                                <arg>-Xlint:type-parameter-shadow</arg>      <!--  A local type parameter shadows a type already in scope. -->
                                <arg>-Xlint:unsound-match</arg>              <!--  Pattern match may not be typesafe. -->
                                <arg>-Yno-adapted-args</arg>                 <!--  Do not adapt an argument list (either by inserting () or creating a tuple) to match the receiver. -->
                                <arg>-Ypartial-unification</arg>             <!--  Enable partial unification in type constructor inference -->
                                <arg>-Ywarn-dead-code</arg>                  <!--  Warn when dead code is identified. -->
                                <arg>-Ywarn-extra-implicit</arg>             <!--  Warn when more than one implicit parameter section is defined. -->
                                <arg>-Ywarn-inaccessible</arg>               <!--  Warn about inaccessible types in method signatures. -->
                                <arg>-Ywarn-infer-any</arg>                  <!--  Warn when a type argument is inferred to be `Any`. -->
                                <arg>-Ywarn-nullary-override</arg>           <!--  Warn when non-nullary `def f()' overrides nullary `def f'. -->
                                <arg>-Ywarn-numeric-widen</arg>              <!--  Warn when numerics are widened. -->
                                <arg>-Ywarn-unused:implicits</arg>           <!--  Warn if an implicit parameter is unused. -->
                                <arg>-Ywarn-unused:imports</arg>             <!--  Warn if an import selector is not referenced. -->
                                <arg>-Ywarn-unused:locals</arg>              <!--  Warn if a local definition is unused. -->
                                <arg>-Ywarn-unused:params</arg>              <!--  Warn if a value parameter is unused. -->
                                <arg>-Ywarn-unused:patvars</arg>             <!--  Warn if a variable bound in a pattern is unused. -->
                                <arg>-Ywarn-unused:privates</arg>            <!--  Warn if a private member is unused. -->
                            </args>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- disable surefire -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <!-- enable scalatest -->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>${scalatest-maven-plugin.version}</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.ubirch.chainer.Service</mainClass>
                            <useUniqueVersions>false</useUniqueVersions>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!-- create and/or push the created docker image -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <buildDirectory>${project.build.outputDirectory}</buildDirectory>
                    <repository>ubirch/${project.artifactId}</repository>
                    <tag>${build.number}</tag>
                    <buildArgs>
                        <VERSION>${project.version}</VERSION>
                        <BUILD>${build.number}</BUILD>
                        <SERVICE_NAME>${project.name}</SERVICE_NAME>
                        <JAR_LIBS>target/lib</JAR_LIBS>
                        <JAR_FILE>target/${project.build.finalName}.${project.packaging}</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
            <!-- for mvn deploy to work, disable the default deploy plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- copies helm charts folder to target/helm-charts and replaces the docker image tag -->
            <!-- https://stackoverflow.com/questions/10923944/maven-resources-plugin-error-using-copy-resources-goal-resources-outputdire -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/helm-charts</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../helm-charts</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
