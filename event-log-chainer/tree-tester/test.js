//https://merkletree.js.org/
const { MerkleTree } = require('merkletreejs')
const SHA512 = require('crypto-js/sha512')

// Put the trees in its new version

const data = '{"ver":"33.33","root":"c82393d76318185114e81c414eca4999e2d0268c430d1de00d9bb54f57a1158e6b00e32e61b646ac22e866d0bab25c7b87b42b74367aba0ae726091fa4617934","leaves":["04307d213885666f89e49ed06206c615705dbbf04fa5c5f75b7933b485759d0db7953754ddfedc8fc666c46951b87723b98ea57bc5466052725d1d989699ff7f","9af02e4e178ef2dad752eaddf92168873752b02a5c9315636d40fd0c7703cdd251b84e880164fffc3e92920fe43cfade1ae07753dc5e87d8912b5f2832564ae2","27487f9d00d5896f179cf1317431c6ea5d8e5c88fbde2f2c0daf4ad4800c31341fabcb20fb1e5e12ad632e305397c1562fee5405abdbe93f452422f605d339c6","d0d43759de38caa3287ed86fb306b5e47b2ad7d97248ea383ca1a0f0fa12ae93da2be197e7a4d218d1c3dca88e19d7bcb9e31670679a25a743b251f2c372e5fc","4a8a37595b54c134bd2f28ddeed22a568765cc99a6d3ab66c6c29cf49ed0e51cb8d2dc592cb844187e0f6cc442be83be5e2ef9593829e15dd1abeb9490676289","2b1c67af3fcfd9b5345e2c7523f4a9ed2ff3696774ed8705cd848370a23b023757a4e55c492bcbf1491f258ac0dc82444d19dd2e0e0542155eb60c3555f3dc39","a0a6130b095e2ab202077f41f5c85cac3e411856bf14dbf72fd57cd99e3d5d5b54843e72f72c32142ece8dbe81c8394aa8981f9cd6ab827b776e2cdc09e0c863","6e36842788a624db4079f690379a9286a562feb79cd8078cc44e008c683d6b11ee70758de227332545826b9ecb1b144745169d64280ca5812321a53ab0287646","6eaf0049fd46cdc096df98cf3ef252fa4542bc0527e8e063334c8b53c8a2b28e48140501b7fbf470cc03026057a7da739ce48459ddde265f62793b7acbbd747f","709799f59459b53ba3b368e6bb644eca94eab47ca2607acff0822d090c1cb9b5154d11d3fb1aa08844db13727590763a96c167a21d33581713d9fcafcc01f687"]}'

const compressedTree = JSON.parse(data)

const tree = new MerkleTree(compressedTree.leaves, SHA512,  {
    duplicateOdd: false
})

const root = tree.getRoot().toString('hex')

console.log("Leaves=" + compressedTree.leaves.length)
console.log('Does the generated root match?=' + (root === compressedTree.root))
