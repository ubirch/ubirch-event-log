include "application.base.conf"

eventLog {

  mode = ${CHAINER_MODE}

  minTreeRecords = ${CHAINER_MIN_TREE_RECORDS}
  //In Seconds
  treeEvery = ${CHAINER_MIN_TREE_EVERY}

  pause = ${CHAINER_PAUSE}
  split = ${CHAINER_SPLIT}

  kafkaConsumer {
    //Comma-separeted values of IP/Hostname and ports
    bootstrapServers = ${CHAINER_KFC_NODES}
    topic = ${CHAINER_KFC_TOPIC}
    //If empty, a group id will be created.
    groupId = ${CHAINER_KFC_GROUP}
    gracefulTimeout = 2 //In Seconds
    maxPollRecords = ${CHAINER_KFC_MAX_POLL_RECORDS}
    fetchMaxBytesConfig = ${CHAINER_KFC_FETCH_MAX_BYTES_CONFIG}
    maxPartitionFetchBytesConfig = ${CHAINER_KFC_MAX_PARTITION_FETCH_BYTES_CONFIG}
  }

  kafkaProducer {
    lingerMS = ${CHAINER_KFP_LINGER_MS}
    //Comma-separeted values of IP/Hostname and ports
    bootstrapServers = ${CHAINER_KFP_NODES}
    topic = ${CHAINER_KFP_TOPIC}
    errorTopic = ${CHAINER_KFP_ERROR_TOPIC}
  }

  metrics {
    prometheus {
      port = ${CHAINER_PROM_HTTP_PORT}
    }
  }

  executionContext {
    threadPoolSize = ${CHAINER_EXEC_THREAD_POOL_SIZE}
  }

}